---


#-------------------------------------------------------------------------------
# General
#

# The django project name. It is mainly used to generate project paths.
django_name: django

# User owning the Django project.
django_user: "{{ django_name }}"

# The python version that should be used to propulse the Django application. It should correspond to
# a python command name; eg. python2.7, python3, python3.6, etc.
django_python_version: python3

# Local path to a key file to use to clone the Git repository of the project.
django_deploy_key_filepath: ""


#-------------------------------------------------------------------------------
# Paths
#

# Root directory where the Django project will live.
django_path: "/webapps/{{ django_name }}"

# Path where static files will be stored (should correspond to the value of STATIC_ROOT).
django_static_path: "{{ django_path }}/static"

# Path where media files will be stored (should correspond to the value of MEDIA_ROOT).
django_media_path: "{{ django_path }}/media"

# Path where the Django project will be cloned.
django_project_path: "{{ django_path }}/project"

# Path where the virtualenv of the project will be stored.
django_env_path: "{{ django_path }}/.env"

# Path to the requirements file to install when setuping the project.
django_requirements_file: "{{ django_project_path }}/requirements.txt"

# This path will be used to reload the WSGI application whenever it is "touched" (usefull in case of
# python code changes). An empty value ('') should be used to disable touch-reloading.
django_touch_reload_path: "{{ django_project_path }}"


#-------------------------------------------------------------------------------
# Database
#

# Whether or not the role should be responsible for the database creation (defaults to yes).
django_db_managed: yes

# User to use for database connections.
django_db_user: "{{ django_user }}"

# The name of the database to use for the Django project.
django_db_name: "{{ django_name }}"

# The password to use for database connections.
django_db_password: whatever


#-------------------------------------------------------------------------------
# Django management commands
#

# Allows to disable django management commands execution (eg. migrate, collectstatic, etc).
django_commands_enabled: yes


#-------------------------------------------------------------------------------
# Git
#

# Git URL of the repository for the Django project.
django_project_repo_url: ""

# Branch to use when cloning the project.
django_project_repo_version: master


#-------------------------------------------------------------------------------
# Django settings
#

# This variable is used to create a ".env.json" file at the root of the project folder. This file is
# aimed to contain secret variables (like the content of the SECRET_KEY Django setting).
django_jsonsettings_properties: {}

# This variable can define some environment variable key/value pairs that should be set before
# running the Django application or any related command (a common use case would be to set the
# DJANGO_SETTINGS_MODULE variables in this dictionary).
django_env_variables: {}

# Domain name under which the project will be served. It will notably end ep in nginx conf as
# server_name.
django_domain_name: ""
django_extra_domain_names: []


#-------------------------------------------------------------------------------
# Node.js Assets
#

# These variables allows to activate the installation of Node.js and NPM and ensure that node
# dependencies are installed / built for the project if applicable.
django_node_assets_enabled: no
django_node_assets_nodejs_version: 11.x
django_node_assets_build_command: npm build


#-------------------------------------------------------------------------------
# Other
#

# Fixtures to load using Django's loaddata command.
django_fixtures_to_load: []

# Ends up in "processes" uwsgi config.
django_uwsgi_process_count: 5

# Allows to disallow robots by including the "disallow_robots" snippet provided by the nginx role.
django_disallow_robots: no

# Allows to indicate if the nginx config should only answer to HTTP requests or not (by default SSL
# is used and requests on port 80 are ignored).
django_disable_ssl: no

# Allows to force http -> https redirection in the Nginx site configuration (this could be useful
# if such redirection is not present in a potential catchall config).
django_force_https_redirect: no

# Allows to configure httpasswd users to use to protect the Django webapp using a basic HTTP
# authentication. This will be used to created a .httpasswd file and to update the Django app's
# nginx config.
django_htpasswd_users: []
_django_htpasswd_users_example:
  - name: test
    password: dummy

# Allows to limit the maximum allowed size of the client request body. This value goes to the
# nginx's client_max_body_size option.
django_client_max_body_size: 50M
